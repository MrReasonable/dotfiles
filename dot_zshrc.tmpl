{{- if eq .chezmoi.os "darwin" -}}
if [[ -d /opt/homebrew ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
else
  eval "$(/usr/local/bin/brew shellenv)"
fi
{{- end}}
# The following lines were added by compinstall
zstyle :compinstall filename '{{ .chezmoi.homeDir }}/.zshrc'
{{- if eq .chezmoi.os "darwin" }}
local brew_dir="$(brew --prefix)"
{{- end }}

autoload -Uz compinit
compinit
# End of lines added by compinstall
if [[ ! -f $HOME/.zi/bin/zi.zsh ]]; then
  print -P "%F{33}▓▒░ %F{160}Installing (%F{33}z-shell/zi%F{160})…%f"
  command mkdir -p "$HOME/.zi" && command chmod go-rwX "$HOME/.zi"
  command git clone -q --depth=1 --branch "main" https://github.com/z-shell/zi "$HOME/.zi/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi
source "$HOME/.zi/bin/zi.zsh"
autoload -Uz _zi
(( ${+_comps} )) && _comps[zi]=_zi
# examples here -> https://wiki.zshell.dev/ecosystem/category/-annexes
zicompinit # <- https://wiki.zshell.dev/docs/guides/commands

{{- if eq .chezmoi.os "darwin" }}
export PATH="$(brew --prefix)/opt/findutils/libexec/gnubin:$PATH"
export PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"
{{- end }}


# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

{{- if eq .chezmoi.os "darwin" }}
_GPG_AGENT_SOCK="${HOME}/.gnupg/S.gpg-agent"
{{- else if eq .chezmoi.os "linux" }}
_GPG_AGENT_SOCK="${XDG_RUNTIME_DIR}/.gnupg/S.gpg-agent"
{{- end }}

zstyle ':prezto:module:gpg-agent:auto-start' local
zstyle :omz:plugins:ssh-agent identities $(find ~/.ssh -regex '.+/id_[^.]+$' -printf '%f ')

zi wait lucid light-mode for \
    OMZP::colored-man-pages \
    OMZP::common-aliases \
    OMZP::rbenv \
    OMZP::iterm2 \
    OMZP::jenv \
    OMZP::composer \
    OMZP::ssh-agent \
    z-shell/zzcomplete \
    z-shell/ZUI \
    zsh-users/zsh-syntax-highlighting \
    TwoPizza9621536/zsh-plenv \
    OMZP::golang \
    z-shell/z-a-rust \
    zpm-zsh/tmux \
    xlshiz/pyenv-zsh-plugin \
    akccakcctw/zsh-better-pnpm-completion \
    lukechilds/zsh-better-npm-completion \
    ryutok/rust-zsh-completions \
    zdharma-continuum/zinit-console \
    laggardkernel/zsh-gpg-agent \
    greymd/docker-zsh-completion \
{{- if eq .chezmoi.os "darwin"}}
  pick'init.zsh' compile'*.zsh' \
    laggardkernel/zsh-iterm2 \
{{- end }}

# Utilize Turbo and initialize the completion system
{{- if eq .chezmoi.os "darwin" }}
{{- /* zi wait pack atload=+"zicompinit_fast; zicdreplay" for brew-completions */ -}}
{{- end }}

type eza > /dev/null 2>&1 && zi wait lucid light-mode for z-shell/zsh-eza
 
zi light-mode for z-shell/z-a-meta-plugins \
  @annexes \
  skip'F-Sy-H' @zsh-users+fast \
  @fuzzy \
  skip'dircolors-material exa' @console-tools \
  skip'F-Sy-H' @z-shell \
  @ext-git \
  @romkatv

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias vi="nvim"

export NVM_DIR="$HOME/.nvm"

type nodenv > /dev/null 2>&1 && eval "$(nodenv init -)"
type goenv > /dev/null 2>&1 && eval "$(goenv init -)"
type soroban > /dev/null 2>&1 && eval "$(soroban completion --shell zsh)"

{{- if eq .chezmoi.os "darwin" }}
type asdf > /dev/null 2>&1 && eval ". $(brew --prefix asdf)/libexec/asdf.sh"
{{- else if eq .chezmoi.os "linux" }}
[[ -f "$HOME/.asdf/asdf.sh" ]] && eval ". $HOME/.asdf/asdf.sh"
{{- end }}

export CLICOLOR=1

{{- if eq .chezmoi.os "darwin" }}
alias update-all="chezmoi update && chezmoi apply && brew update && brew update --cask && brew upgrade && brew cleanup && zi cclear && zi update -p -a && zi cclear && zi compinit"
{{- else }}
alias update-all="chezmoi update && chezmoi apply && which apt-get > /dev/null && sudo apt-get update && sudo apt-get dist-upgrade && sudo apt-get --purge autoremove; \
which flatpak > /dev/null && flatpak update -y && sudo flatpak update -y;  \
which snap > /dev/null && sudo snap refresh;\
zi cclear && zi update -p -a && zi cclear && zi compinit"
{{- end }}

zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:complete:*:options' sort false
zstyle ':fzf-tab:complete:_zlua:*' query-string input

export GPG_TTY=$TTY
export EDITOR=nvim
export TMUX_AUTOSTART=false
export TMUX_MOTD=false
alias ll="ll -a"

# pnpm
export PNPM_HOME="{{ .chezmoi.homeDir }}/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end
{{- if eq .chezmoi.os "darwin" }}
export PATH="${brew_dir}/opt/openjdk/bin:$PATH"
export PATH="${brew_dir}/opt/unzip/bin:$PATH"
brew ls --versions llvm > /dev/null && \
export PATH="$(brew --prefix llvm)/bin:$PATH"
export LDFLAGS="-L$(brew --prefix)/opt/bzip2/lib -L$(brew --prefix)/opt/zlib/lib"
export CPPFLAGS="-I$(brew --prefix)/opt/bzip2/include -I$(brew --prefix)/opt/zlib/lib"
{{- end }}

[ -d $HOME/.local/bin ] && export PATH="$HOME/.local/bin:$PATH"
[ -d $HOME/bin ] && export PATH="$HOME/bin:$PATH"

[ -r $HOME/.kube/user-config ] && export KUBECONFIG="$HOME/.kube/user-config"

export HISTFILE=~/.zsh_history
export HISTSIZE=100000
export SAVEHIST=100000
setopt APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt INC_APPEND_HISTORY_TIME
setopt SHARE_HISTORY
setopt AUTO_CD
setopt AUTO_LIST
setopt AUTO_PUSHD
setopt BANG_HIST
setopt INTERACTIVE_COMMENTS
setopt MULTIOS
setopt NO_BEEP
setopt PROMPT_SUBST
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_MINUS

